global
function math(context) {
    return  context.scopes.findLastIndex(s => s.startsWith("meta.math")) > context.scopes.findLastIndex(s => s.startsWith("comment") || s.startsWith("meta.text.normal.tex"));
}
function notmath(context) {
    return  context.scopes.findLastIndex(s => s.startsWith("meta.math")) <= context.scopes.findLastIndex(s => s.startsWith("comment") || s.startsWith("meta.text.normal.tex"));
}
endglobal

context notmath(context)
snippet `fig` "figure" bA
\begin{center}
	\includegraphics[width=0.8\textwidth]{img/$1} $0
\end{center}
endsnippet

context notmath(context)
snippet `table([1-9]{1})\ ([1-9]{1})` "Table environment" bA
\begin{table}[H]
	\centering
	\begin{tabular}{``
	let len = m[2];
	let results = "";
	for(var i=0; i<len-1; i++){
		results += "c|"
	}
	results += "c";
	rv = results;
	``}
	    \toprule
			``
			let order = 1;
			nrow = m[1];
			ncol = m[2];
			for (var i=0; i<nrow-1; i++){
				for(var j = 0;j <ncol-1;j++){
					rv += `${snip.tabstop(order+2)} & `;
					order ++;
				}	
				rv += ` ${snip.tabstop(order+3)} \\\\`+ `\\`+ `\n`;
				order ++;
				if(i == 0){
					rv += `		\\midrule` + `\n`;
				}
				rv += `			`;
			}	
			for(var j = 0;j <ncol-1;j++){
				rv += `${snip.tabstop(order+3)} & `;
				order ++;
			}
			rv += ` ${snip.tabstop(order+3)} \\\\` + `\\`;
			``
    	\bottomrule
	\end{tabular}
	\caption{${2:caption}}
\end{table}
endsnippet

context math(context)
snippet `ary([1-9]{1})\ ([1-9]{1})` "Array environment" ibA
\begin{array}{``
	let len = m[2];
	let results = "";
	for(var i=0; i<len; i++){
		results += "c"
	}
	rv = results;
	``}
	``
	let order = 1;
	let nrow = m[1];
	let ncol = m[2];
	for (var i=0; i<nrow-1; i++){
		for(var j = 0;j <ncol-1;j++){
			rv += `${snip.tabstop(order)} & `;
			order ++;
		}
		rv += ` ${snip.tabstop(order)} \\\\`+ `\\`+ `\n` + `	`;
		order ++;
	}
	for(var j = 0;j <ncol-1;j++){
		rv += `${snip.tabstop(order)} & `;
		order ++;
	}
	rv += ` ${snip.tabstop(order)} \\\\`+ `\\`;
	``
\end{array}
endsnippet

priority 2000
context math(context)
snippet `(b|p)mat([1-9]{1})\ ([1-9]{1})` "matrix" iwA
\begin{``rv = m[1]``matrix}``
	let order = 1;
	let nrow = m[2];
	let ncol = m[3];
	rv = `\n`;
	for (var i=0; i<nrow; i++){
		rv += '	';
		for(var j = 0;j <ncol-1;j++){
			rv += `${snip.tabstop(order)} & `;
			order ++;
		}
		rv += ` ${snip.tabstop(order)} \\\\`+ `\\`+ `\n`;
		order ++;
	}
	``\end{``rv = m[1]``matrix}$0
endsnippet

snippet %-- "------" wA
%────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
$0
endsnippet

context notmath(context)
snippet wrt "with respect to" wA
w.r.t.\ $0
endsnippet

context notmath(context)
snippet iid "identical and independently distributed" wA
i.i.d.\ $0
endsnippet

context math(context)
snippet disp "displaystyle" A
\displaystyle $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])opn` "operator" A
\operatorname{$1} $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])upn` "operator" A
\operatorname{$1}_{$2} $0
endsnippet

snippet wp "with probability" wA
w.p.\ $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;m|mu)` "\mu" A
\mu $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;a|alpha)` "\alpha" A
\alpha $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;s|sigma)` "\sigma" A
\sigma $0
endsnippet
context math(context)
snippet `(?<![\\a-zA-Z])(;S|Sigma)` "\Sigma" A
\Sigma $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;r|rho)` "\rho" A
\rho $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;b|beta)` "\beta" A
\beta $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;g|gamma)` "\gamma" A
\gamma $0
endsnippet
context math(context)
snippet `(?<![\\a-zA-Z])(;G|Gamma)` "\Gamma" A
\Gamma $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;d|delta)` "\delta" A
\delta $0
endsnippet
context math(context)
snippet `(?<![\\a-zA-Z])(;D|Delta)` "\Delta" A
\Delta $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;z|zeta)` "\zeta" A
\zeta $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;e|eta)` "\eta" A
\eta $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;t|theta)` "\theta" A
\theta $0
endsnippet
context math(context)
snippet `(?<![\\a-zA-Z])(;vt|vartheta)` "\vartheta" A
\vartheta $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;T|Theta)` "\Theta" A
\Theta $0
endsnippet

priority 200
context math(context)
snippet `(?<![\\a-zA-Z])(;;t|tau)` "\tau" A
\tau $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;i|iota)` "\iota" A
\iota $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;k|kappa)` "\kappa" A
\kappa $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;l|lambda)` "\lambda" A
\lambda $0
endsnippet
context math(context)
snippet `(?<![\\a-zA-Z])(;L|Lambda)` "\Lambda" A
\Lambda $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;n|nu)` "\nu" A
\nu $0
endsnippet

priority 200
context math(context)
snippet `(?<![\\a-zA-Z])(;;n|nable)` "\nabla" iA
\nabla $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;p|pi)` "\pi" A
\pi $0
endsnippet
context math(context)
snippet `(?<![\\a-zA-Z])(;P|Pi)` "\Pi" A
\Pi $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;r|rho)` "\rho" A
\rho $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;t|tau)` "\tau" A
\tau $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;u|upsilon)` "\upsilon" A
\upsilon $0
endsnippet
context math(context)
snippet `(?<![\\a-zA-Z])(;U|Upsilon)` "\Upsilon" A
\Upsilon $0
endsnippet

priority 200
context math(context)
snippet `(?<![\\a-zA-Z])(;;p|phi)` "\phi" A
\phi $0
endsnippet
priority 200
context math(context)
snippet `(?<![\\a-zA-Z])(;;P|Phi)` "\Phi" A
\Phi $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;vp|varphi)` "\varphi" A
\varphi $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;c|chi)` "\chi" A
\chi $0
endsnippet

priority 300
context math(context)
snippet `(?<![\\a-zA-Z])(;;;p|psi)` "\psi" A
\psi $0
endsnippet
priority 300
context math(context)
snippet `(?<![\\a-zA-Z])(;;;P|Psi)` "\Psi" A
\Psi $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;o|omega)` "\omega" A
\omega $0
endsnippet
context math(context)
snippet `(?<![\\a-zA-Z])(;O|Omega)` "\Omega" A
\Omega $0
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])(;x|xi)` "\xi" A
\xi $0
endsnippet
context math(context)
snippet `(?<![\\a-zA-Z])(;X|Xi)` "\Xi" A
\Xi $0
endsnippet

context math(context)
snippet eps "\epsilon" iA
\epsilon $0
endsnippet

priority 200
context math(context)
snippet veps "\vepsilon" iA
\varepsilon $0
endsnippet

priority 100
context math(context)
snippet `(?<![\\a-zA-Z])ell` "\ell" A
\ell $0
endsnippet

context math(context)
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

context math(context)
snippet `((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/` "Fraction no ()" A
\frac{``rv = m[1]``}{$1}$0
endsnippet

snippet `^.*\)/` "Fraction with ()" Am
``
    let str = m[0];
    str = str.slice(0, -1);
    let lastIndex = str.length - 1;

    let depth = 0;
    let i = str.length - 1;

    while (true) {
        if (str[i] == ')') depth += 1;
        if (str[i] == '(') depth -= 1;
        if (depth == 0) break;
        i -= 1;
    }

    let results = str.slice(0, i) + "\\frac{" + str.slice(i+1, -1) + "}";
    rv = results;
	rv += `{${snip.tabstop(1)}}${snip.tabstop(0)}`;
    ``
endsnippet

context math(context)
snippet `>=|(?<!\\)geq` "greater or equal to" A
\geq $0
endsnippet

context math(context)
snippet `<~` "less or equal to (up to constant)" A
\lesssim $0
endsnippet

context math(context)
snippet `>~` "less or equal to (up to constant)" A
\gtrsim $0
endsnippet

context math(context)
snippet `<=|(?<!\\)leq` "less or equal to" A
\leq $0
endsnippet

context math(context)
snippet `!=|(?<!\\)neq` "not equal" A
\neq $0
endsnippet

context math(context)
snippet `\|=|(?<!\\)mdl` "models" A
\models $0
endsnippet

context math(context)
snippet `\|-|(?<!\\)vdh` "models" A
\vdash $0
endsnippet

priority 200
context math(context)
snippet suc "succeeds" iA
\succ $0
endsnippet

context math(context)
snippet seq "succeeds or equal to" iA
\succeq $0
endsnippet

context math(context)
snippet prec "precedes" iA
\prec $0
endsnippet

context math(context)
snippet peq "precedes or equal to" iA
\preceq $0
endsnippet

context math(context)
snippet == "constan equal" iA
\equiv $0
endsnippet

context math(context)
snippet ~~ "approx equal" iA
\thickapprox $0
endsnippet

context math(context)
snippet ~= "approx equal(2)" iA
\cong $0
endsnippet

context math(context)
snippet ~- "approx equal(3)" iA
\simeq $0
endsnippet

context math(context)
snippet `(?<!\\)cir` "composition" A
\circ $0
endsnippet

context math(context)
snippet @> "inclusion" iA
\hookrightarrow $0
endsnippet

context math(context)
snippet || "mid" A
\mid $0
endsnippet

context math(context)
snippet `([a-zA-Z])\1` "subscript" A
_{``rv = m[1]``} $0
endsnippet

context math(context)
snippet `([A-Za-z\d)}])\_([A-Za-z\d\-+][A-Za-z\d-+\_])` "auto subscript" A
`` rv = m[1]``_{``rv = m[2]``$1} $0
endsnippet

priority 200
context math(context)
snippet `([A-Za-z\d)}])\^([A-Za-z\d\-+][A-Za-z\d-+])` "auto supscript" A
`` rv = m[1]``^{``rv = m[2]``$1} $0
endsnippet

context math(context)
snippet `(b|B)(ar)` "bar" A
\overline{$1} $0
endsnippet

priority 200
context math(context)
snippet `(\\?[a-zA-Z]\w*|\\[^(^\s]+\})(b|B)(ar)` "bar" A
\overline{``rv = m[1]``} $0
endsnippet

context math(context)
snippet `(t|T)(d)` "tilde" A
\widetilde{$1} $0
endsnippet

priority 200
context math(context)
snippet `(\\?[a-zA-Z]\w*|\\[^(^\s]+\})(t|T)(d)` "tilde" A
\widetilde{``rv = m[1]``} $0
endsnippet

context math(context)
snippet `(\\?[a-zA-Z]\w*|\\[^(^\s]+\})(h|H)(t)` "hat" A
\hat{``rv = m[1]``} $0
endsnippet

context math(context)
snippet `(\\?[a-zA-Z]\w*|\\[^(^\s]+\})(b|B)(f)` "mathbf" A
\mathbf{``rv = m[1]``} $0
endsnippet

context math(context)
snippet `(\\?[a-zA-Z]\w*|\\[^(^\s]+\})(b|B)(m)` "bm" A
\bm{``rv = m[1]``} $0
endsnippet

context math(context)
snippet `(\\?[a-zA-Z]\w*|\\[^(^\s]+\})(,\.|\.,)` "Vector postfix" A
\vec{``rv = m[1]``} $0
endsnippet

context math(context)
snippet 1..n "sequence" iA
$1_1, \dots, $1_n $0
endsnippet

context notmath(context)
snippet fig "Figure environment" b
\begin{figure}[${1:H}]
	\centering
	\includegraphics[width=0.8\textwidth]{$2}
	\caption{$3}
	\label{fig:$4}
\end{figure}
endsnippet

context math(context)
snippet ... "dots" iA
\cdots $0
endsnippet

context math(context)
snippet => "implies" iA
\implies $0
endsnippet

context math(context)
snippet =< "implied by" iA
\impliedby $0
endsnippet

priority 200
context math(context)
snippet `(?<!\\)iff` "if and only if" A
\iff $0
endsnippet

snippet fm "inline Math" wA
\(${1}\)``
let test = t[1][0];
if (test != ',' &&  test != '.' &&  test != '-' && test !='?' && test !=' '){
	rv = ' ';
}
else{
	rv = '';
}``$2
endsnippet

snippet dm "display Math" bA
\[
	${1}
\]$0
endsnippet

context math(context)
snippet <> "<>" iA
\langle $1 \rangle $0
endsnippet

context math(context)
snippet lr, "<>" iA
\left\langle $1 \right\\rangle $0
endsnippet

context math(context)
snippet lrd "()" iA
\left( $1 \right) $0
endsnippet

context math(context)
snippet {} "{}" iA
\\{ $1 \\} $0
endsnippet

context math(context)
snippet lra "{}" iA
\\left\\{ $1 \\right\\} $0
endsnippet

context math(context)
snippet lrq "[]" iA
\left[ $1 \right] $0
endsnippet

context math(context)
snippet ceil "ceil" iA
\lceil $1 \rceil $0
endsnippet

context math(context)
snippet Ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context math(context)
snippet flr "floor" iA
\lfloor $1 \rfloor$0
endsnippet

context math(context)
snippet Flr "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

context math(context)
snippet abs "abs value" iA
\vert ${1} \vert $0
endsnippet

context math(context)
snippet Abs "abs value" iA
\left\vert ${1} \right\vert $0
endsnippet

priority 200
context math(context)
snippet norm "norm" iA
\lVert $1 \rVert $0
endsnippet

context math(context)
snippet Norm "Norm" iA
\left\lVert $1 \right\rVert $0
endsnippet

context math(context)
snippet `(?<!\\)sum` "sum" A
\sum_{${1:i}} $0
endsnippet

context math(context)
snippet Sum "sum" wA
\sum_{${1:i}=${2:1}}^{${3:\infty}} $0
endsnippet

priority 100
context math(context)
snippet `(?<!\\)scup` "disjoint union" wA
\sqcup $0
endsnippet

context math(context)
snippet `(?<!\\)cup` "union" wA
\cup $0
endsnippet

context math(context)
snippet Cup "Union" wA
\bigcup_{${1:i}=${2:1}}^{${3:\infty}} $0
endsnippet

context math(context)
snippet `(?<!\\)cap` "intersection" A
\cap $0
endsnippet

context math(context)
snippet Cap "Intersection" wA
\bigcap_{${1:i}=${2:1}}^{${3:\infty}} $0
endsnippet

context math(context)
snippet Conj "conjunction" wA
\bigwedge_{${1:i}=${2:1}}^{${3:\infty}} $0
endsnippet

context math(context)
snippet Disj "disjunction" wA
\bigvee_{${1:i}=${2:1}}^{${3:\infty}} $0
endsnippet

context math(context)
snippet `(?<!\\)sub ` "subset" A
\subset $0
endsnippet

context math(context)
snippet `(?<!\\)nsub` "nsubseteq" A
\nsubseteq $0
endsnippet

context math(context)
snippet sube "subseteq" iA
\subseteq $0
endsnippet

context math(context)
snippet subn "subsetneq" iA
\subsetneq $0
endsnippet

context math(context)
snippet `\\sups` "supset" A
\supset $0
endsnippet

priority 300
context math(context)
snippet `(?<!\\)nsup` "nsupseteq" A
\nsupseteq $0
endsnippet

context math(context)
snippet `\\supe` "supseteq" A
\supseteq $0
endsnippet

context math(context)
snippet `\\supn` "supsetneq" A
\supsetneq $0
endsnippet

priority 300
context math(context)
snippet `(?<!\\)nlim` "nolimit" A
\nolimits
endsnippet

priority 200
context math(context)
snippet `(?<!\\)lim` "limit" A
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

priority 300
context math(context)
snippet `(?<!\\)lsup` "limsup" iA
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

priority 300
context math(context)
snippet `(?<!\\)linf` "liminf" iA
\liminf_{${1:n} \to ${2:\infty}} 
endsnippet

context math(context)
snippet `(?<!\\)prd` "product" iA
\prod $0
endsnippet

context math(context)
snippet Prd "product" iA
\prod_{${1:n}=${2:1}}^{${3:\infty}} $0
endsnippet

priority 100
context math(context)
snippet `(?<!\\)coprd` "coproduct" iA
\coprod_{${1:n}=${2:1}}^{${3:\infty}} $0
endsnippet

context math(context)
snippet pt "\partial" iA
\partial $0
endsnippet

priority 100
context math(context)
snippet pdif "d/dx" iA
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context math(context)
snippet dif "d/dx" iA
\frac{\mathrm{d}${1:y}}{\mathrm{d}${2:x}} $0
endsnippet

context math(context)
snippet `(?<!\\)sq` "\sqrt{}" A
\sqrt{${1}} $0
endsnippet

priority 200
context math(context)
snippet oo "\infty" iA
\infty 
endsnippet

priority 300
context math(context)
snippet `\^oo` "supscript ^\infty" A
^{\infty} $0
endsnippet

priority 200
context math(context)
snippet EE "exist" iA
\exists 
endsnippet

priority 200
context math(context)
snippet AA "forall" iA
\forall 
endsnippet

context math(context)
snippet `\b([a-zA-Z])([a-zA-Z])(\d)` "?[?+?]" iA
``rv = m[1]``_{``rv = m[2]``+``rv = m[3]``$1}$0
endsnippet

context math(context)
snippet `o\+` "oplus" A
\oplus $0
endsnippet

context math(context)
snippet `O\+` "Oplus" A
\\bigoplus_{${1:i}} $0
endsnippet

priority 200
context math(context)
snippet `o(x\.|\.x)` "otimes" A
\otimes $0
endsnippet

context math(context)
snippet `(x\.|\.x)` "times" A
\times $0
endsnippet

context math(context)
snippet split "split" iA
\begin{split}
	$1
\end{split}$0
endsnippet

context math(context)
snippet case "cases" iA
\begin{dcases}
	$1, &\text{ if } $3 ;\\\\
	$2, &\text{ if } $4 ;\\\\
	$5, &\text{ otherwise} .
\end{dcases}$0
endsnippet

context math(context)
snippet tet "text" iA
\text{$1} $0
endsnippet

context math(context)
snippet `(\\\\)([a-zA-Z])` A
\mathbb{``rv = m[2].toUpperCase()``} $0
endsnippet

context math(context)
snippet nin iA
\notin $0
endsnippet

context math(context)
snippet inv "inverse" iA
^{-1} $0
endsnippet

context math(context)
snippet `(?<!\\)tp` "transpose" A
^{\top} $0
endsnippet

context math(context)
snippet prp "perp" iA
^{\perp} $0
endsnippet

context math(context)
snippet cp "complement" iA
^{c} $0
endsnippet

context math(context)
snippet qs "square" iA
^{2} $0
endsnippet

context math(context)
snippet `->|(?<!\\)to` "to" A
\to $0
endsnippet

priority 100
context math(context)
snippet `<->` "to" A
\leftrightarrow $0
endsnippet

context math(context)
snippet !> "mapsto" iA
\mapsto $0
endsnippet

priority 300
context math(context)
snippet rint "integral" iA
\int_{{\mathbb{R}^{${1:n}}}} ${2} \\,\mathrm{d}${3:x} $0
endsnippet

priority 200
context math(context)
snippet oint "integral" iA
\int_{${1:\Omega}} ${2} \\,\mathrm{d}${3:x} $0
endsnippet

priority 100
context math(context)
snippet dint "integral" iA
\int_{${1:-\infty}}^{${2:\infty}} ${3} \\,\mathrm{d}${4:x} $0
endsnippet

context math(context)
snippet `(?<!\\)int` "integral without anything" A
\int $0
endsnippet

context math(context)
snippet dx "dx" A
\, \mathrm{d}x $0
endsnippet

context math(context)
snippet `(?<!\\)not` "lnot" A
\lnot $0
endsnippet

priority 200
context math(context)
snippet `(?<!\\)(sin|cos|tan|cot|csc|sec|ln|log|exp|perp|inf|sup|Tr|diag|rank|det|dim|ker|Im|Re|dom|arg|min|max|sgn|OPT|land|lor)` "general" wA
\\``rv = m[1]`` $0
endsnippet

priority 300
context math(context)
snippet `(?<!\\)a(sin|cos|tan|cot|csc|sec)` "arc-trigonometry" wA
\\arc``rv = m[1]`` $0
endsnippet

priority 300
context math(context)
snippet `a(max|min)` "arg min/max" wA
\arg``rv = m[1]``_{$1} $0
endsnippet

context math(context)
snippet ' "prime" iA
^{\prime} $0
endsnippet

priority 200
context math(context)
snippet `\\prime\}\ \'` "prime" iA
\prime\prime} $0
endsnippet

context math(context)
snippet -- "setminus" iA
\setminus $0
endsnippet

priority 200
context math(context)
snippet `([a-zA-Z])(c|C)al` "mathcal" A
\mathcal{``rv = m[1].toUpperCase()``} $0
endsnippet

context notmath(context)
snippet `(\\?\w+)(b|B)f` "textbf" A
\textbf{``rv = m[1]``} $0
endsnippet

context math(context)
snippet rm "mathrm" iA
\mathrm{$1} $0
endsnippet

context math(context)
snippet `([a-zA-Z])(s|S)cr` "mathscr" A
\mathscr{``rv = m[1].toUpperCase()``} $0
endsnippet

context math(context)
snippet str "star" iA
^{\star} $0
endsnippet

context math(context)
snippet ast "asterisk" iA 
\ast $0
endsnippet

context math(context)
snippet ** "asterisk" iA
^{\ast} $0
endsnippet

context math(context)
snippet _* "asterisk" iA
_{\ast} $0
endsnippet

context math(context)
snippet `\\ast\}\ \*` "asterisk" iA
\ast\ast} $0
endsnippet

context math(context)
snippet ^. "\dot" iA
\dot{$1} $0
endsnippet

context math(context)
snippet dot{. "\ddot" iA
ddot{$1
endsnippet

context math(context)
snippet >> ">>" iA
\gg $0
endsnippet

context math(context)
snippet << "<<" iA
\ll $0
endsnippet

context math(context)
snippet ind "indicator function" iA
\mathbbm{1}_{$1} $0
endsnippet

priority 200
context math(context)
snippet spt "support" iA
\mathop{\mathrm{supp}}($1) $0
endsnippet

context math(context)
snippet mean "Expectation" iA
\mathbb{E}_{$1}\left[$2 \right] $0
endsnippet

context math(context)
snippet `(?<!\\)Var` "Variation" A
\Var_{$1}\left[$2 \right] $0
endsnippet

context math(context)
snippet `(?<!\\)Cov` "Covariance" A
\Cov_{$1}\left[$2 \right] $0
endsnippet

context math(context)
snippet `(?<!\\)Prb` "Probability" A
\Pr_{$1}($2) $0
endsnippet

priority 200
context math(context)
snippet `(?<!\\)sim` "sim" A
\sim $0
endsnippet

context math(context)
snippet apx "approx" iA
\approx $0
endsnippet

context math(context)
snippet `(?<!\\)bino` "binomial coefficient" A
\binom{$1}{$2}$0
endsnippet

context math(context)
snippet ems "empty set" iA
\varnothing $0
endsnippet

snippet `(?<!\\)emph` "emph" iA
\emph{$1}$0
endsnippet

snippet begg "begin custom env" iA
\begin{${1:eg}}
	$0
\end{${1:eg}}
endsnippet

context math(context)
snippet := "definition in math" iA
\coloneqq $0
endsnippet

context math(context)
snippet =: "definition in math" iA
\eqqcolon $0
endsnippet

context math(context)
snippet :: "colon" iA
\colon $0
endsnippet

priority 200
context math(context)
snippet idd "identity" iA
\identity_{$1} $0
endsnippet

context math(context)
snippet `(?<!\\)quo` "\quotient" iA
\quotient{$1}{$2} $0
endsnippet

context math(context)
snippet `([a-zA-Z])\|\_` "\at" A
\eval{``rv = m[1]``}_{$1}^{$2} $0
endsnippet

context notmath(context)
snippet atf "\autoref{}" wA
\autoref{$1} $0
endsnippet

snippet hpr "\hyperref[]{}" wA
\hyperref[$1]{$2} $0
endsnippet

snippet lbl "\label{}" iA
\label{$1}
endsnippet

context notmath(context)
snippet thm "theorem" bA
\begin{theorem}
	$0
\end{theorem}
endsnippet

context notmath(context)
snippet enumi "enumerate" bA
\begin{enumerate}[label=\roman*)]
    \item $1 
\end{enumerate} $0
endsnippet

context notmath(context)
snippet enumn "enumerate" bA
\begin{enumerate}[label=\arabic*)]
    \item $1 
\end{enumerate} $0
endsnippet

context notmath(context)
snippet enuma "enumerate" bA
\begin{enumerate}[label=\alph*)]
    \item $1 
\end{enumerate} $0
endsnippet

context notmath(context)
snippet itemize "enumerate" bA
\begin{itemize}
    \item $1 
\end{itemize} $0
endsnippet

context notmath(context)
snippet prp "proposition" bA
\begin{proposition}
	$0
\end{proposition}
endsnippet

context notmath(context)
snippet prf "proof" bA
\begin{proof}
	$0
\end{proof}
endsnippet

context notmath(context)
snippet prf "proof" bA
\begin{proof}
	$0
\end{proof}
endsnippet

context notmath(context)
snippet rmk "remark" bA
\begin{remark}
	$0
\end{remark}
endsnippet

context notmath(context)
snippet dfn "definition" bA
\begin{definition}
	$0
\end{definition}
endsnippet

context notmath(context)
snippet undl "underline" iA
\underline{$1} $0
endsnippet

context math(context)
snippet vph "same level of underbrace" iA
\vphantom{$1} $0
endsnippet

context math(context)
snippet hom "homorphism" iAw
\Homomorphism $0
endsnippet

context math(context)
snippet Obj "object" iA
\Object $0
endsnippet

context math(context)
snippet mor "morphism" iA
\Morphism $0
endsnippet

context math(context)
snippet __ "\underset{}{}" iA
\underset{$1}{$2} $0
endsnippet

context math(context)
snippet ^^ "\overset{}{}" iA
\overset{$1}{$2} $0
endsnippet

context math(context)
snippet fk "\mathfrak{}" iA
\mathfrak{$1} $0
endsnippet

context math(context)
snippet `tgl ` "\triangleleft" iA
\triangleleft $0
endsnippet

context math(context)
snippet tgle "\trianglelefteq" iA
\trianglelefteq $0
endsnippet

context notmath(context)
snippet `(?<!\\)qed` "\qed" iA
\qed
endsnippet

context notmath(context)
snippet opmin "Optimization problem" bA
\[
	\begin{aligned}
		\min~ & ${1}  \\\\
        	& ${2}  \\\\
        	& ${3}
	\end{aligned}
\]
$0
endsnippet

context notmath(context)
snippet opmax "Optimization problem" bA
\[
	\begin{aligned}
		\max~ & ${1}  \\\\
        	& ${2}  \\\\
        	& ${3}
	\end{aligned}
\]
$0
endsnippet

context notmath(context)
snippet opPD "Optimization problem with primal & dual" bA
\[
	\begin{alignedat}{5}
		\min~&c^{\top}x\qquad\qquad&&\max ~&&y^{\top}b\\\\
		&Ax = b 				&&		&&y^{\top}A\leq c^{\top}\\\\
		(\mathrm{P})\quad	&x\geq  0 	&&(\mathrm{D})\quad&&
	\end{alignedat}.
\]$0
endsnippet

context notmath(context)
snippet date "Date" bA

``
	const today = new Date();

	const day = today.getDate();
	const month = today.getMonth() + 1;
	const year = today.getFullYear();

	const daysOfWeek = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
	const weekDay = daysOfWeek[today.getDay()];
	
	rv = `\\section*{${weekDay}, ${month}/${day}/${year}}`;``

endsnippet